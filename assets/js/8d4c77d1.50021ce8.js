"use strict";(self.webpackChunkcamunda_platform_rest_api=self.webpackChunkcamunda_platform_rest_api||[]).push([[193],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},30987:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var a=n(87462),o=(n(67294),n(3905));const r={id:"self-managed",sidebar_position:2.2,title:"Camunda Platform 8 SM",description:"Connect to Camunda Platform 8 Self-Managed",tags:["guides","connection"]},i="Connecting to your Camunda Platform Self-Managed cluster",c={unversionedId:"guides/connection/self-managed",id:"guides/connection/self-managed",title:"Camunda Platform 8 SM",description:"Connect to Camunda Platform 8 Self-Managed",source:"@site/docs/guides/connection/self-managed.md",sourceDirName:"guides/connection",slug:"/guides/connection/self-managed",permalink:"/korthout/camunda-platform-rest-api/docs/guides/connection/self-managed",draft:!1,editUrl:"https://github.com/korthout/camunda-platform-rest-api/tree/main/docs/docs/guides/connection/self-managed.md",tags:[{label:"guides",permalink:"/korthout/camunda-platform-rest-api/docs/tags/guides"},{label:"connection",permalink:"/korthout/camunda-platform-rest-api/docs/tags/connection"}],version:"current",sidebarPosition:2.2,frontMatter:{id:"self-managed",sidebar_position:2.2,title:"Camunda Platform 8 SM",description:"Connect to Camunda Platform 8 Self-Managed",tags:["guides","connection"]},sidebar:"tutorialSidebar",previous:{title:"Camunda Platform 8 SaaS",permalink:"/korthout/camunda-platform-rest-api/docs/guides/connection/saas"},next:{title:"Configuration",permalink:"/korthout/camunda-platform-rest-api/docs/guides/config"}},l={},s=[{value:"Secure Communication using TLS",id:"secure-communication-using-tls",level:2},{value:"Disabling TLS",id:"disabling-tls",level:2},{value:"Next steps",id:"next-steps",level:2}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connecting-to-your-camunda-platform-self-managed-cluster"},"Connecting to your Camunda Platform Self-Managed cluster"),(0,o.kt)("p",null,"Connecting to your own cluster can be achieved using environment variables.\nIn order to connect to a Camunda Platform Self-Managed cluster, you'll need to know the IP address\nof the Zeebe Gateway.\nSimply pass the address of the Zeebe Gateway as ",(0,o.kt)("inlineCode",{parentName:"p"},"ZEEBE_CLIENT_BROKER_GATEWAYADDRESS")," to Docker when you start up the container."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# Example connecting to Self-Managed Zeebe Gateway at 192.168.50.118\ndocker run -p 8080:8080 \\\n  -e ZEEBE_CLIENT_BROKER_GATEWAYADDRESS=192.168.50.118:26500 \\\n  ghcr.io/korthout/camunda-platform-rest-api:latest\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note"),"\nYou'll need to open port 8080, so you can reach the API from your local machine, and it can reach the cluster.")),(0,o.kt)("h2",{id:"secure-communication-using-tls"},"Secure Communication using TLS"),(0,o.kt)("p",null,"By default, the Camunda Platform REST API communicates securely with the Zeebe Gateway over TLS.\nWithout any configuration, the client looks in the system's certificate store for a CA certificate with which to validate the gateway's certificate chain.\nIf you wish to use TLS without having to install a certificate in client's system, you can specify a CA certificate using ",(0,o.kt)("inlineCode",{parentName:"p"},"ZEEBE_CA_CERTIFICATE_PATH"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# Example connecting to Self-Managed Zeebe Gateway at 192.168.50.118 with a specific CA certificate\ndocker run -p 8080:8080 \\\n  -e ZEEBE_CLIENT_BROKER_GATEWAYADDRESS=192.168.50.118:26500 \\\n  -e ZEEBE_CA_CERTIFICATE_PATH=/path-to-ca-certificate \\\n  ghcr.io/korthout/camunda-platform-rest-api:latest\n")),(0,o.kt)("h2",{id:"disabling-tls"},"Disabling TLS"),(0,o.kt)("p",null,"If your Zeebe Gateway does not have ",(0,o.kt)("a",{parentName:"p",href:"https://docs.camunda.io/docs/self-managed/zeebe-deployment/security/secure-client-communication/#gateway"},"TLS enabled"),",\nthen you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"ZEEBE_INSECURE_CONNECTION")," to disable the secure communication with the Zeebe Gateway over TLS."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# Example connecting to Self-Managed Zeebe Gateway at 192.168.50.118 without TLS\ndocker run -p 8080:8080 \\\n  -e ZEEBE_CLIENT_BROKER_GATEWAYADDRESS=192.168.50.118:26500 \\\n  -e ZEEBE_INSECURE_CONNECTION=true \\\n  ghcr.io/korthout/camunda-platform-rest-api:latest\n")),(0,o.kt)("h2",{id:"next-steps"},"Next steps"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/guides/config"},"configure the connection")),(0,o.kt)("li",{parentName:"ul"},"explore the ",(0,o.kt)("a",{parentName:"li",href:"/docs/api"},"API docs")),(0,o.kt)("li",{parentName:"ul"},"play around with the API in Swagger UI (running at ",(0,o.kt)("a",{parentName:"li",href:"http://localhost:8080/swagger-ui.html/"},"/swagger-ui"),").")))}p.isMDXComponent=!0}}]);